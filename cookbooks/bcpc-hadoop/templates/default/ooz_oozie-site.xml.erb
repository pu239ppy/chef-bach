<?xml version="1.0"?>
<!--
################################################
#
#              Generated by Chef
#
################################################
-->
<configuration>
  <!--
        Refer to the oozie-default.xml file for the complete list of
        Oozie configuration properties and their default values.
    -->

    <property>
      <name>oozie.service.ActionService.executor.ext.classes</name>
      <value>
        org.apache.oozie.action.email.EmailActionExecutor,
        org.apache.oozie.action.hadoop.HiveActionExecutor,
        org.apache.oozie.action.hadoop.ShellActionExecutor,
        org.apache.oozie.action.hadoop.SqoopActionExecutor,
        org.apache.oozie.action.hadoop.DistcpActionExecutor
      </value>
    </property>

    <property>
      <name>oozie.service.SchemaService.wf.ext.schemas</name>
      <value>
        shell-action-0.1.xsd,
        shell-action-0.2.xsd,
        shell-action-0.3.xsd,
        email-action-0.1.xsd,
        hive-action-0.2.xsd,
        hive-action-0.3.xsd,
        hive-action-0.4.xsd,
        hive-action-0.5.xsd,
        sqoop-action-0.2.xsd,
        sqoop-action-0.3.xsd,
        ssh-action-0.1.xsd,
        ssh-action-0.2.xsd,
        distcp-action-0.1.xsd,
        distcp-action-0.2.xsd
      </value>
    </property>

    <property>
      <name>oozie.system.id</name>
      <value>oozie-${user.name}</value>
      <description>
        The Oozie system ID.
      </description>
    </property>

    <property>
      <name>oozie.systemmode</name>
      <value><%= node["bcpc"]["hadoop"]["oozie"]["systemmode"]%></value>
      <description>
        System mode for  Oozie at startup.
      </description>
    </property>

    <property>
      <name>oozie.service.AuthorizationService.security.enabled</name>
      <value><%= node["bcpc"]["hadoop"]["oozie"]["service"]["AuthorizationService"]["security"]["enabled"]%></value>
      <description>
        Specifies whether security (user name/admin role) is enabled or not.
        If disabled any user can manage Oozie system and manage any job.
      </description>
    </property>

    <property>
      <name>oozie.service.PurgeService.older.than</name>
      <value><%= node["bcpc"]["hadoop"]["oozie"]["service"]["PurgeService"]["older"]["than"]%></value>
      <description>
        Jobs older than this value, in days, will be purged by the PurgeService.
      </description>
    </property>

    <property>
      <name>oozie.service.PurgeService.purge.interval</name>
      <value><%= node["bcpc"]["hadoop"]["oozie"]["service"]["PurgeService"]["purge"]["interval"]%></value>
      <description>
        Interval at which the purge service will run, in seconds.
      </description>
    </property>

    <property>
      <name>oozie.service.CallableQueueService.queue.size</name>
      <value><%= node["bcpc"]["hadoop"]["oozie"]["service"]["CallableQueueService"]["queue"]["size"]%></value>
      <description>Max callable queue size</description>
    </property>

    <property>
      <name>oozie.service.CallableQueueService.threads</name>
      <value><%= node["bcpc"]["hadoop"]["oozie"]["service"]["CallableQueueService"]["threads"]%></value>
      <description>Number of threads used for executing callables</description>
    </property>

    <property>
      <name>oozie.service.CallableQueueService.callable.concurrency</name>
      <value><%= node["bcpc"]["hadoop"]["oozie"]["service"]["CallableQueueService"]["callable"]["concurrency"]%></value>
      <description>
        Maximum concurrency for a given callable type.
        Each command is a callable type (submit, start, run, signal, job, jobs, suspend,resume, etc).
        Each action type is a callable type (Map-Reduce, Pig, SSH, FS, sub-workflow, etc).
        All commands that use action executors (action-start, action-end, action-kill and action-check) use
        the action type as the callable type.
      </description>
    </property>

    <property>
      <name>oozie.service.coord.normal.default.timeout
      </name>
      <value><%= node["bcpc"]["hadoop"]["oozie"]["service"]["coord"]["normal"]["default"]["timeout"]%></value>
      <description>Default timeout for a coordinator action input check (in minutes) for normal job.
        -1 means infinite timeout</description>
    </property>

    <property>
      <name>oozie.db.schema.name</name>
      <value><%= node["bcpc"]["hadoop"]["oozie"]["db"]["schema"]["name"]%></value>
      <description>
        Oozie DataBase Name
      </description>
    </property>

    <property>
      <name>oozie.service.JPAService.create.db.schema</name>
      <value><%= node["bcpc"]["hadoop"]["oozie"]["service"]["JPAService"]["create"]["db"]["schema"]%></value>
      <description>
        Creates Oozie DB.
        If set to true, it creates the DB schema if it does not exist. If the DB schema exists is a NOP.
        If set to false, it does not create the DB schema. If the DB schema does not exist it fails start up.
      </description>
    </property>

    <% if @ooz_hosts.length >= 2 %>
    <property>
      <name>oozie.base.url</name>
      <value>http://<%=node[:bcpc][:management][:vip]%>:<%=node["bcpc"]["hadoop"]["oozie_port"]%>/oozie</value>
      <description>
        http url to access Oozie
      </description>
    </property>
    <% end %>

    <property>
      <name>oozie.service.JPAService.jdbc.driver</name>
      <value>com.mysql.jdbc.Driver</value>
      <description>
        JDBC driver class.
      </description>
    </property>

    <property>
      <name>oozie.service.JPAService.jdbc.url</name>
      <!-- XXX for some reason, this works for hive metastore, but breaks oozie with an error 
          "No Database Selected"  just connecting to localhost instead 
       <value>jdbc:mysql:loadbalance://<%=@mysql_hosts.join(',')%>/oozie?loadBalanceBlacklistTimeout=5000</value>  
      <value>jdbc:mysql://<%=node[:hostname]%>/oozie</value> -->
      <value>jdbc:mysql://<%=node[:bcpc][:management][:vip]%>:3306/oozie</value>
      <description>
        JDBC URL.
      </description>
    </property>

    <property>
      <name>oozie.service.JPAService.jdbc.username</name>
      <value><%= @mysql_username %></value>
      <description>
        DB user name.
      </description>
    </property>

    <property>
      <name>oozie.service.JPAService.jdbc.password</name>
      <value><%= @mysql_password %></value>
      <description>
      </description>
    </property>

    <property>
      <name>oozie.service.JPAService.pool.max.active.conn</name>
      <value><%= node["bcpc"]["hadoop"]["oozie"]["service"]["JPAService"]["pool"]["max"]["active"]["conn"]%></value>
      <description>
        Max number of connections.
      </description>
    </property>

    <property>
      <name>oozie.service.HadoopAccessorService.jobTracker.whitelist</name>
      <value/>
      <description>
        Whitelisted job tracker for Oozie service.
      </description>
    </property>

    <property>
      <name>oozie.service.HadoopAccessorService.nameNode.whitelist</name>
      <value/>
      <description>
        Whitelisted job tracker for Oozie service.
      </description>
    </property>

    <property>
      <name>oozie.service.HadoopAccessorService.hadoop.configurations</name>
      <value>*=/etc/hadoop/conf</value>
      <description>
        Comma separated AUTHORITY=HADOOP_CONF_DIR, where AUTHORITY is the HOST:PORT of
        the Hadoop service (JobTracker, HDFS). The wildcard '*' configuration is
        used when there is no exact match for an authority. The HADOOP_CONF_DIR contains
        the relevant Hadoop *-site.xml files. If the path is relative is looked within
        the Oozie configuration directory; though the path can be absolute (i.e. to point
        to Hadoop client conf/ directories in the local filesystem.
      </description>
    </property>

    <property>
      <name>oozie.service.WorkflowAppService.system.libpath</name>
      <value>/user/${user.name}/share/lib</value>
      <description>
        System library path to use for workflow applications.
        This path is added to workflow application if their job properties sets
        the property 'oozie.use.system.libpath' to true.
      </description>
    </property>

    <property>
      <name>use.system.libpath.for.mapreduce.and.pig.jobs</name>
      <value>false</value>
      <description>
        If set to true, submissions of MapReduce and Pig jobs will include
        automatically the system library path, thus not requiring users to
        specify where the Pig JAR files are. Instead, the ones from the system
        library path are used.
      </description>
    </property>

    <property>
      <name>oozie.authentication.token.validity</name>
      <value><%= node["bcpc"]["hadoop"]["oozie"]["authentication"]["token"]["validity"]%></value>
      <description>
        Indicates how long (in seconds) an authentication token is valid before it has
        to be renewed.
      </description>
    </property>

    <property>
      <name>oozie.authentication.signature.secret</name>
      <value>oozie</value>
      <description>
        The signature secret for signing the authentication tokens.
        If not set a random secret is generated at startup time.
        In order to authentiation to work correctly across multiple hosts
        the secret must be the same across al the hosts.
      </description>
    </property>

    <property>
      <name>oozie.authentication.cookie.domain</name>
      <value/>
      <description>
        The domain to use for the HTTP cookie that stores the authentication token.
        In order to authentiation to work correctly across multiple hosts
        the domain must be correctly set.
      </description>
    </property>

    <property>
      <name>oozie.authentication.simple.anonymous.allowed</name>
      <value>true</value>
      <description>
        Indicates if anonymous requests are allowed.
        This setting is meaningful only when using 'simple' authentication.
      </description>
    </property>

    <!-- Default proxyuser configuration for Hue -->

  <% if node[:bcpc][:hadoop][:kerberos][:enable] == true then %> 

  <property>
    <name>oozie.credentials.credentialclasses</name>
    <value>
      hcat=org.apache.oozie.action.hadoop.HCatCredentials,
      hbase=org.apache.oozie.action.hadoop.HbaseCredentials,
      hive2=org.apache.oozie.action.hadoop.Hive2Credentials
    </value>
  </property>

  <property>
    <name>oozie.authentication.kerberos.principal</name>
    <% if @ooz_hosts.length >= 2 %>
      <value>*</value>
    <% else %>
      <value><%=node[:bcpc][:hadoop][:kerberos][:data][:spnego][:principal]%>/<%=node[:bcpc][:hadoop][:kerberos][:data][:spnego][:princhost]=="_HOST" ? float_host(node[:fqdn]) : node[:bcpc][:hadoop][:kerberos][:data][:spnego][:princhost]%>@<%=node[:bcpc][:hadoop][:kerberos][:realm]%></value>
    <% end %>
    <description>Indicates the Kerberos principal to be used for HTTP endpoint. The principal MUST start with 'HTTP/' as per Kerberos HTTP SPNEGO specification.</description>
  </property>

  <property>
    <name>oozie.authentication.kerberos.keytab</name>
    <value><%=node[:bcpc][:hadoop][:kerberos][:keytab][:dir] %>/<%= node[:bcpc][:hadoop][:kerberos][:data][:oozie][:spnego_keytab]%></value>
    <description>Location of the keytab file with the credentials for the principal. Referring to the same keytab file Oozie uses for its Kerberos credentials for Hadoop.</description>
  </property>

  <property>
    <name>oozie.authentication.type</name>
    <value>kerberos</value>
    <description>Defines authentication used for Oozie HTTP endpoint. Supported values are: simple | kerberos | #AUTHENTICATION_HANDLER_CLASSNAME#</description>
  </property>

  <property>
    <name>oozie.service.HadoopAccessorService.kerberos.enabled</name>
    <value>true</value>
    <description>Indicates if Oozie is configured to use Kerberos.</description>
  </property>

  <property>
    <name>local.realm</name>
    <value><%= node[:bcpc][:hadoop][:kerberos][:realm] %></value>
    <description>Kerberos Realm used by Oozie and Hadoop. Using 'local.realm' to be aligned with Hadoop configuration</description>
  </property>

  <property>
    <name>oozie.service.HadoopAccessorService.keytab.file</name>
    <value><%= node[:bcpc][:hadoop][:kerberos][:keytab][:dir] %>/<%= node[:bcpc][:hadoop][:kerberos][:data][:oozie][:keytab] %></value>
    <description> Location of the Oozie user keytab file.</description>
  </property>

  <property>
    <name>oozie.service.HadoopAccessorService.kerberos.principal</name>
    <value><%=node[:bcpc][:hadoop][:kerberos][:data][:oozie][:principal]%>/<%=node[:bcpc][:hadoop][:kerberos][:data][:oozie][:princhost]=="_HOST" ? float_host(node[:fqdn]) : node[:bcpc][:hadoop][:kerberos][:data][:oozie][:princhost]%>@<%= node[:bcpc][:hadoop][:kerberos][:realm] %></value>
    <description>Kerberos principal for Oozie service.</description>
  </property>

  <property>
    <name>oozie.authentication.kerberos.name.rules</name>
    <value>
    <% node[:bcpc][:hadoop][:kerberos][:data].each do|ke,va| %>
      RULE:[2:$1@$0](<%= va['principal']%>@.*<%= node[:bcpc][:hadoop][:kerberos][:realm] %>)s/.*/<%=va['owner'] %>/
    <% end %>
      DEFAULT
    </value>
    <description>The kerberos names rules is to resolve kerberos principal names, refer to Hadoop's KerberosName for more details.</description>
  </property>
  <% end %>

  <!-- Default proxyuser configuration for Hue -->
  <property>
    <name>oozie.service.ProxyUserService.proxyuser.hue.hosts</name>
    <value>*</value>
  </property>

  <property>
    <name>oozie.service.ProxyUserService.proxyuser.hue.groups</name>
    <value>*</value>
  </property>

  <property>
      <name>oozie.launcher.mapreduce.map.memory.mb</name>
      <value><%= node['bcpc']['hadoop']['yarn']['scheduler']['minimum-allocation-mb'].round %></value>
  </property>

  <property>
      <name>oozie.launcher.mapreduce.map.java.opts</name>
      <value><%="-Xmx#{(0.8 * node['bcpc']['hadoop']['yarn']['scheduler']['minimum-allocation-mb']).round}m" %></value>
  </property>

  <property>
      <name>oozie.launcher.mapreduce.reduce.memory.mb</name>
      <value><%= 2 * node['bcpc']['hadoop']['yarn']['scheduler']['minimum-allocation-mb'].round %></value>
  </property>

  <property>
      <name>oozie.launcher.mapreduce.reduce.java.opts</name>
      <value><%="-Xmx#{(0.8 * 2 * node['bcpc']['hadoop']['yarn']['scheduler']['minimum-allocation-mb']).round}m" %></value>
  </property>

  <property>
      <name>oozie.launcher.yarn.app.mapreduce.am.resource.mb</name>
      <value><%= 2 * node['bcpc']['hadoop']['yarn']['scheduler']['minimum-allocation-mb'].round %></value>
  </property>

  <property>
    <name>oozie.launcher.yarn.app.mapreduce.am.command-opts</name>
    <value><%="-Xmx#{ (0.8 * 2 * node['bcpc']['hadoop']['yarn']['scheduler']['minimum-allocation-mb']).round}m" %></value>
  </property>

  <property>
    <name>oozie.service.ActionCheckerService.action.check.delay</name>
    <value><%= node['bcpc']['hadoop']['oozie']['check_action_delay'] %></value>
  </property>
  
  <property>
     <name>oozie.services.ext</name>
     <value><%= node["bcpc"]["hadoop"]["oozie"]["service"]["ext"] %></value>
  </property>

  <property>
     <name>oozie.zookeeper.namespace</name>
     <value><%= node.chef_environment %>/oozie</value>
  </property>

  <property>
     <name>oozie.instance.id</name>
     <value><%= float_host(node['fqdn']) %></value>
  </property>

  <property>
    <name>oozie.zookeeper.connection.string</name>
    <value><%= get_head_nodes.map{ |s| float_host(s[:fqdn])}.join(",") %></value>
  </property>

</configuration>
